
## Handlebars.rb

This uses [therubyracer][1] to bind to the _actual_ JavaScript implementation of
[Handlebars.js][2] so that you can use it from ruby.

## Usage

Simple stuff

    require 'handlebars'
    handlebars = Handlebars::Context.new
    template = handlebars.compile("{{say}}{{what}}")
    template.call(:say => "Hey", :what => "Yuh!") #=> "Hey Yuh!"

With functions as properties

    template.call(:say => "Hey", :what => lambda {|this| ("yo" * 2) + "!"}) #=> "Hey yoyo!"

Register block helpers:

    handlebars.register_helper(:twice) do |block|
      "#{block.call}#{block.call}"
    end
    template = handlebars.compile({{#twice}}Hurray!{{/twice}})
    template.call #=> Hurray!Hurray!

By default, handlebars will escape strings that are returned by your block helpers. To
mark a string as safe:

    template = handlebars.compile("{{safe}}")
    template.call(:safe => proc {Handlebars::SafeString.new("<pre>Totally Safe!<pre>")})

## Hack

    git clone git@github.com:cowboyd/handlebars.rb.git #git it
    cd handlebars.rb #go to it
    git submodule update --init #pull down handlebars.js
    rspec spec/ #test it


[1]: http://github.com/cowboyd/therubyracer "The Ruby Racer"
[2]: http://github.com/wycats/handlebars.js "Handlebars JavaScript templating library"

